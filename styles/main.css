:root {
  --primary-color: #fffffc;
  --secondary-color: #b9b5ff;

  --startbtn-color: #adf7b6;
  --stopbtn-color: #f6837b;
  --resetbtn-color: #c1d3fe;

  --h1-font: "Poppins", sans-serif;
  --time-font: "Orbitron", sans-serif;
  --body-font: "Nunito", sans-serif;
}
/* General styling*/
a {
  text-decoration: none;
}
body {
  font-family: var(--body-font);
  background: var(--primary-color);
}
/* Included responsive heading by adding clamp using minmax */
h1 {
  font-family: var(--h1-font);
  font-weight: 400;
  font-size: clamp(2.5rem, 2.136rem + 1.82vw, 3.5rem);
}
/* Centering all contents using flex. This ensures content stays
at center of whatever device. 
Included margin so content doesn't touch container edges.*/
main {
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  align-content: center;
  justify-content: center;
  margin: 0 8px 0 8px;
}
/* gave watch container width
using max-width & width ensures responds to change in device
centered stopwatch container and items using flex */
.stopwatchContainer {
  max-width: 600px;
  min-height: 450px;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  padding: 10px;
  border-radius: 20px;
  background: rgba(185, 181, 255, 0.5);
  gap: 40px;
}
/* centered timer and timer control buttons using flex
includes max-width and width so container is responsive  */
.stopwatchContent {
  background: linear-gradient(
    40deg,
    rgba(179, 168, 243, 0.9),
    rgba(255, 253, 252, 0.8)
  );
  border-radius: 20px;
  border: 1px solid var(--primary-color);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
  display: flex;
  flex-direction: column;
  padding: 20px;
  align-items: center;
  justify-content: space-evenly;
  margin: 40px auto 10px auto;
  gap: 30px;
  max-width: 550px;
  min-height: 300px;
  width: 100%;
}
.time {
  font-family: var(--time-font);
  font-size: clamp(1.5rem, 1.136rem + 1.82vw, 2.5rem);
  font-weight: 100;
}
/* displays timer control buttons in a singlar stack using grid,
 I used grid because it gives me more control over arranging control buttons*/
.stopwatchControls {
  display: grid;
  grid-template-columns: 1fr;
  gap: 14px;
  width: 100%;
}
.stopwatchControls button:nth-child(1) {
  padding: 10px 0;
  cursor: pointer;
  border-radius: 8px;
  border: 1px solid var(--primary-color);
  transition: all .3s ease;
  background: var(--startbtn-color);
  font-size: 1.2rem;
}
.stopwatchControls button:nth-child(1):hover{
  background: #91e39c;
}
.stopwatchControls button:nth-child(2) {
  padding: 10px 0;
  cursor: pointer;
  border-radius: 8px;
  border: 1px solid var(--primary-color);
  transition: all .3s ease;
  background: var(--stopbtn-color);
  font-size: 1.2rem;
}
.stopwatchControls button:nth-child(2):hover{
  background: #ed7d75;
}
.stopwatchControls button:last-child {
  padding: 10px 0;
  cursor: pointer;
  border-radius: 8px;
  border: 1px solid var(--primary-color);
  transition: all .3s ease;
  background: var(--resetbtn-color);
  font-size: 1.2rem;
}
.stopwatchControls button:last-child:hover{
  background: #b1c3eb;
}
.footer {
  text-align: center;
  margin-top: 20px;
}
.socials {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
  gap: 10px;
}
.socials a {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background: var(--secondary-color);
  transition: transform 0.3s, box-shadow 0.3s;
}
.socials a i {
  font-size: 1.5rem;
  color: #666565;
  transition: 0.3s;
}
.socials a i:hover {
  color: #000;
}
.socials a:hover {
  transform: translateY(-0.25rem);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

@media screen and (min-width: 450px) {
  .stopwatchControls {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 14px;
  }
}
